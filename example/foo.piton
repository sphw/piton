struct Test<T> {
 foo: u16,
 bar: T,
 boolean: bool
 array: [u8; 20]
}

struct Foo {
 foo: Test<u32>,
 bar: Vec<u8, 20>
}

enum Bar<T> {
  Test,
  B(T)
}

service Driver<D> {
   method xyz(Bar<D>) -> Test<D>
}

bus TestBus<D> {
  msg foo(Bar<D>)
}

extern Vec<T, const N: usize> {
    concrete rust = "piton::Vec<T, N>"
}
